# text
lls-manager.text.user.hover_event=See {0} last login time.
lls-manager.text.server.hover_event=Join {0}.
lls-manager.text.server_group.hover_event=Show server group {0} info.
lls-manager.text.channel.hover_event=Switch channel to {0}.
lls-manager.text.load_player_data_fail=Load player {0} data fail.
lls-manager.text.save_player_fail=Save the {0} of {1} fail.
lls-manager.text.player_not_found=Can not found player {0}.
lls-manager.text.channel.unregistered_channel=Can not switch to a unregistered channel {0}.
lls-manager.text.channel.global_message=Player {0} switch channel to {1}.
lls-manager.text.channel.switch_success=Switch the channel of {0} to {1}.
lls-manager.text.channel.already_in_channel=Player {0} already in channel {1}.
# command
## lls_server_group
lls-manager.command.lls_server_group.add.already_in_server_group=Server {0} already in server group {1}.
lls-manager.command.lls_server_group.add.success=Add {0} to server group {1} success!
lls-manager.command.lls_server_group.add.failure=Add {0} to server group {1} fail.
lls-manager.command.lls_server_group.remove.not_in_server_group=Server {0} not in server group {1}.
lls-manager.command.lls_server_group.remove.failure=Remove {0} from server group {1} fail.
lls-manager.command.lls_server_group.remove.success=Remove {0} from server group {1} success!
lls-manager.command.lls_server_group.server_group_not_found=Can not found server group {0}.
## lls_whitelist
lls-manager.command.lls_whitelist.add.already_in_whitelist=Server {0} already in the whitelist server list of {1}.
lls-manager.command.lls_whitelist.add.success=Add {0} to the whitelist server list of {1} success!
lls-manager.command.lls_whitelist.add.failure=Add {0} to the whitelist server list of {1} fail.
lls-manager.command.lls_whitelist.remove.not_in_whitelist=Server {0} not in the whitelist server list of {1}.
lls-manager.command.lls_whitelist.remove.success=Remove {0} from the whitelist server list of {1} success!
lls-manager.command.lls_whitelist.remove.failure=Remove {0} from the whitelist server list of {1} fail.
lls-manager.command.lls_whitelist.list.hover_event_info=Remove {0} from the whitelist server list of {1}.
lls-manager.command.lls_whitelist.set.success=Set whitelist {0} success！
lls-manager.command.lls_whitelist.set.failure=Set whitelist {0} fail.
lls-manager.command.lls_whitelist.set.already=Whitelist is already turned {0}.
lls-manager.command.lls_whitelist.on=on
lls-manager.command.lls_whitelist.off=off
lls-manager.command.lls_whitelist.status.info=Whitelist is {0}.
lls-manager.command.lls_whitelist.create_player.hint=Add '-c' at the end of the command to create non-existing players
lls-manager.command.lls_whitelist.hint0=Use command §e/lls_whitelist add <username> <serverName>§r to add server to the whitelist server list of player.
lls-manager.command.lls_whitelist.hint1=Use command §e/lls_whitelist remove <username> <serverName>§r to remove server from the whitelist server list of player.
lls-manager.command.lls_whitelist.hint2=Use command §e/lls_whitelist list§r to show all the whitelist server lists of player.
lls-manager.command.lls_whitelist.hint3=Use command §e/lls_whitelist status§r to show the status of whitelist.
lls-manager.command.lls_whitelist.hint4=Use command §e/lls_whitelist status true/false§r to on/off whitelist.
lls-manager.command.lls_whitelist.hint5=Use command §e/lls_whitelist help§r to show this message.
## lls_seen
lls-manager.command.lls_seen.online_text=Player {0} in {1}.
lls-manager.command.lls_seen.offline_text={2} have passed since the last time the player {0} was online at {1}.
lls-manager.command.lls_seen.day=day
lls-manager.command.lls_seen.hour=hour
lls-manager.command.lls_seen.minute=minute
lls-manager.command.lls_seen.second=second
lls-manager.command.lls_seen.list_all=All player seen data:
lls-manager.command.lls_seen.list=Player seen data ({0}-{1}):
lls-manager.command.lls_seen.list.next_page=[Next Page]
lls-manager.command.lls_seen.list.previous_page=[Previous Page]
lls-manager.command.lls_seen.list.page_not_found=Can not found page {0}.
lls-manager.command.lls_seen.hint0=Use command §e/lls_seen list§r to see all the last online time of player.
lls-manager.command.lls_seen.hint1=Use command §e/lls_seen list <page>§r to see the last online time of player.
lls-manager.command.lls_seen.hint2=Use command §e/lls_seen query <username>§r to see the last online time of player.

## lls_channel
lls-manager.command.lls_channel.channel_info={0} channel have {1} player:
lls-manager.command.lls_channel.hint0=Use command §e/lls_channel <channel>§r to switch channel.
lls-manager.command.lls_channel.hint1=Use command §e/lls_channel§r to show all channel.
## lls_login
lls-manager.command.lls_login.success=Login success!
lls-manager.command.lls_login.password_error=Login fail, password error.
lls-manager.command.lls_login.hint=Use §e/lls_login <password>§r to login.
## lls_register
lls-manager.command.lls_register.success=Register success!
lls-manager.command.lls_register.password_error=Register fail, the password is not the same as the second one.
lls-manager.command.lls_register.hint=Use §e/lls_register <password> <passwordConfirm>§r to register.
## lls_passwd
lls-manager.command.lls_passwd.success=Update password success!
lls-manager.command.lls_passwd.password_error=Update password fail, the password is not the same as the second one.
## lls_player
lls-manager.command.lls_player.success=Update the {1} of {0} to {2} success.
lls-manager.command.lls_player.reset_password.success=Reset the password of {0} success.
## lls_create_player
lls-manager.command.lls_create_player.success=Create player {0} success.
lls-manager.command.lls_create_player.already_exists=Player {0} already exists.
# bridge
lls-manager.bridge.chat.format=[{0}] <{1}> {2}
lls-manager.bridge.join.format=[{0}] {1} joined the game.
lls-manager.bridge.leave.format=[{0}] {1} left the game.